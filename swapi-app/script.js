document.addEventListener('DOMContentLoaded', () => {
    const fetchButton = document.getElementById('fetchButton');
    const entityType = document.getElementById('entityType');
    const entityId = document.getElementById('entityId');
    const result = document.getElementById('result');
    const error = document.getElementById('error');
    const loader = document.getElementById('loader');

    fetchButton.addEventListener('click', async () => {
        // –°–±—Ä–æ—Å –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        result.style.display = 'none';
        error.style.display = 'none';
        loader.style.display = 'block';

        try {
            const data = await fetchSWAPI(entityType.value, entityId.value);
            displayResult(data);
        } catch (err) {
            displayError(err);
        } finally {
            loader.style.display = 'none';
        }
    });

    async function fetchSWAPI(type, id) {
        const response = await fetch(`https://swapi.py4e.com/api/${type}/${id}/`);
        
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }
        
        return await response.json();
    }

function displayResult(data) {
    let output = '';
    
    if (data.title) {
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å–º–æ–≤
        output = `üé¨ ${data.title} (Episode ${data.episode_id})
üìÖ ${data.release_date}
üé• Director: ${data.director}
üìù Producer: ${data.producer}

${data.opening_crawl}

Characters: ${data.characters.length}
Planets: ${data.planets.length}
Starships: ${data.starships.length}`;
    } else if (data.name) {
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –ø–ª–∞–Ω–µ—Ç –∏ —Ç.–¥.
        output = `Name: ${data.name}\n`;
        for (const key in data) {
            if (key !== 'name' && !Array.isArray(data[key])) {
                output += `${key}: ${data[key]}\n`;
            }
        }
    }
    
    result.textContent = output || JSON.stringify(data, null, 2);
    result.style.display = 'block';
}

    function displayError(errorObj) {
        let message = '';

        if (errorObj.message.includes('Failed to fetch')) {
            message = '‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.';
        } else if (errorObj.message.includes('HTTP')) {
            message = '‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–≤–µ—Ä–Ω—ã–π ID.';
        } else {
            message = '‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: ' + errorObj.message;
        }

        error.textContent = message;
        error.style.display = 'block';
    }
});